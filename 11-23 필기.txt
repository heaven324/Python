■ 어제 배운 내용 복습
	" 파이썬의 자료형 6가지 "

		1. 문자형
		2. 숫자형
		3. 리스트
		4. 튜플
		5. 딕셔너리
		6. 집합 자료형

	"오라클함수를 파이썬으로 구현"




※ import에 대한 설명 (파이썬 200제 45 번)

			functions.py를 가져오겠다
			 ↑
	import common.functions
		 ↑
		common이라는 패키지(폴더)

	실습 : common.zip을 압축을 해제하는데 압축을 해제해서 common이라는 폴더가 생성되었는지 
	       확인을하고 common폴더안에 여러개의 .py 파일중에 functions.py가 있는지 확인하시오 !

		C:\Users\Administrator\.spyder-py3\untitled0.py
						  :
						  :
						common폴더 갖다놓기








■ import문을 만나면 파이썬 모듈(py 파일)을 찾는 순서 

	import date time 명령어를 수행하면 ?


	1. 파이썬 내장 모듈

	예제 : 
		import sys
		print (sys.builtin_module_names)

	
	2. sys.path에 정의 되어있는 디렉토리

		import sys
		for path in sys.path:
		    print(path)

	예제 : sys.path의 내용을 프린트하시오 !

			C:\ProgramData\Anaconda3\lib\site-packages


	※ site-packages란?

		site-packages란 파이썬의 기본 라이브러리 패키지 외에 추가적인 패키지를 설치하는 디렉토리이다.

		site-packages디렉토리에 여러가지 소프트웨어가 사용할 공통 모듈을 넣어두면 물리적인 장소에
		구애받지 않고 모듈에 접근하여 반입할 수 있다.

	예 : 
		C:\ProgramData\Anaconda3\lib\site-packages

		


문제 146. oracle_func.py라는 이름으로 메모장을 열고 그 안에 어제 만들었던 오라클 함수들을 저장하시오 !

	1. initcap
	2. substr
	3. rtrim
	4. ltrim
	5. rpad
	6. pad
	7. instr

	import oracle_func as o
	print(o.initcap('smith'))

	Smith







■ 오라클의 next_day함수를 파이썬으로 생성하기


문제 147. 오늘 날짜에서 하루 더한 날짜가 어떻게 되는가?

	import datetime as d
	print( d.datetime.today() + d.timedelta(days=1))
		    ↓      ↓
		  클래스  메소드(함수)



문제 148. 아래와 같은 함수를 생성하시오 !

	print(next_day('2018-07-18',2))
	2018-07-20

	def next_day(date, num):
	    import datetime as d
	    from dateutil.relativedelta import relativedelta
	    date1 = d.datetime.strptime(date, '%Y-%m-%d')
	    result = date1 + d.timedelta(days = num)
	    return result
	
	print(next_day('2018-07-18',2))



점심시간 문제 : 

	SQL> select next_day( to_date('2018-11-23', 'RRRR-MM-DD'), '월요일')
	       from dual;

	     2018-11-26

	def next_day(date,week):
	    week_dic = {}
	    week_dic['월요일'] = 0
	    week_dic['화요일'] = 1
	    week_dic['수요일'] = 2
	    week_dic['목요일'] = 3
	    week_dic['금요일'] = 4
	    week_dic['토요일'] = 5
	    week_dic['일요일'] = 6
	    import datetime as d
	    from datetime import datetime as da
	    date1 = d.datetime.strptime(date, '%Y-%m-%d')
	    date_week = da.weekday(date1) 
	    result = date1 + d.timedelta(days = (7 - date_week) + week_dic[week])
	    return result
	
	print(next_day('2018-11-23','월요일'))


문제 149. 오늘이 무슨 요일인지 출력하시오 !

	from datetime import datetime as d
	print(d.today().weekday())


	※ 월요일 : 0
	   화요일 : 1
	   수요일 : 2
	   목요일 : 3
	   금요일 : 4
	   토요일 : 5
	   일요일 : 6


문제 150. 문제 149번을 다시수행하는데 숫자 4가 나오는게 아니라 금요일이라고 출력되게 하시오 !
	  (아래의 리스트 변수를 이용해서)

	dy = ['월요일', '화요일', '수요일', '목요일', '금요일', '토요일', '일요일']

	from datetime import datetime as d
	d = d.today().weekday()
	dy[d]



문제 151. (점심시간 문제) 아래의 데이터를 딕셔너리로 만드시오 ! (딕셔너리 이름 : week_dic)

	    key   value
	     ↓    ↓
	※ 월요일 : 0
	   화요일 : 1
	   수요일 : 2
	   목요일 : 3
	   금요일 : 4
	   토요일 : 5
	   일요일 : 6

	    week_dic = {}
	    week_dic['월요일'] = 0
	    week_dic['화요일'] = 1
	    week_dic['수요일'] = 2
	    week_dic['목요일'] = 3
	    week_dic['금요일'] = 4
	    week_dic['토요일'] = 5
	    week_dic['일요일'] = 6





■ months_between함수를 파이썬으로 만들기

	"날짜와 날짜 사이의 개월수를 출력"

	SQL> select months_between(sysdate, hiredate)
	       from emp;

	예제 : 
		import datetime
		d1 = '2018-07-18'
		print( type(d1))	# 문자형

		import datetime as d
		b = d.datetime.strptime(d1, '%Y-%m-%d')
		
		print(a)
		print( type(a))		# 날짜형


 * 아래 두 날짜 사이의 개월 수 

	2017-01-01 ~ 2018-07-01

	2018-2017 = 12개월
	  07-01     =  6개월
		


문제 152. months_between함수를 파이썬으로 구현하시오 !

	print( months_between('2017-01-01', '2018-07-01'))

	18

	def months_between(date1, date2):
	    import datetime as d
	    a = d.datetime.strptime(date1, '%Y-%m-%d')
	    b = d.datetime.strptime(date2, '%Y-%m-%d')
	    result = (a.year - b.year)*12 + (a.month - b.month)
	    return result
	
	print( months_between('2017-12-01', '2018-01-01'))







■ 일반함수

	1. nvl
	2. decode


문제 153. 오라클의 nvl 함수를 파이썬으로 구현하시오 !

	SQL> select ename, nvl(comm,0)
	       from emp;

	def nvl(data, val):
	    if data == '':
	        return val
	    else:
	        return data
	
	import  csv
	file = open("c:\\emp_comm.csv","r")
	emp_csv = csv.reader(file)
	for  emp_list in  emp_csv:
	    print( emp_list[1], nvl( emp_list[6], 0) )


문제 154. 오라클의 decode 함수를 파이썬으로 구현하시오 !

	SQL> select ename, sal, deptno,
		    decode(deptno, 10, sal*0.1, 0) as bonus
	       from emp;


■ 몬테카를로 알고리즘

	" 수많은 노가다를 통해서 답을 알아내는 것"

	1. 강화학습 : 컴퓨터가 하나의 게임을 수차례 스스로 하면서 게임을 배워나가는 방법

	2. 데이터 분석 : 6기 조은성 학생 지금 강남에 삼성생명에서 데이터 분석 프로젝트를
			 하고있는데 몬테카를로 알고리즘으로 수행

	예 : 삼성생명에서 금융사고가 났을 때를 대비해서 평상시에 가지고 있어야 할 자금이 어떻게 되는지를
	     예측
	     컴퓨터로 수많은 금융사고를 랜덤으로 일으켜서 대비해야할 금액을 알아냄

원의 넓이 구하는 공식 ? 
	반지름 x 반지름 x pi(3.14)



문제 155. 0에서 1사이의 숫자를 random으로 생성해 보시오 !

	import random
	x = random.uniform(0,1)
	print(x)



문제 156. 위의 코드를 for loop문을 이용해서 10000번 반복시키시오 !

	import random
	for i in range(10000):
	    x = random.uniform(0, 1)
	    y = random.uniform(0, 1)
	    print(x)
	    print(y)



문제 157. x*x + y*y <= 1 이면 부채꼴 안에 들어가는 점이므로 이 공식을 이용해서 pi를 구하시오 !

	import random
	total = int( input('찍을 점의 개수를 입력'))
	cnt = 0

	for i in range(total):
	    x = random.uniform(0, 1)
	    y = random.uniform(0, 1)
	    if x*x + y*y <= 1:
	        cnt += 1
	print((cnt/total)*4)


문제 158. 무한루프로 파이값을 찾아가게 만들어보자 

	from time import sleep
	import random
	total = 0
	cnt = 0
	while True:
	    total += 1
	    x = random.uniform(0, 1)
	    y = random.uniform(0, 1)
	    if x*x + y*y <= 1:
	        cnt += 1
	    pi = (cnt/total)*4
	    msg = '\r 파이(pi)는 = %f' %pi
	    print(msg, end = '')
	    sleep(0.0000000000001)







■ 40. 함수 인자(매개변수) 이해하기

	예제 :
		def add_txt(t1, t2 = '파이썬'):
		    print(t1+' : ' + t2)
	    
		add_txt('베스트')
		
		add_txt(t2 = '대한민국', t1 = '1등')
		
		베스트 : 파이썬
		1등 : 대한민국
	
		def add_txt(t1 = '쉬운', t2 = '파이썬'):
		    print(t1+' : ' + t2)


▷ 가변형 매개변수 ?

	매개변수의 수가 유동적인 함수를 만들고 싶을 때 사용하는 변수.

	함수를 실행할 때 매개변수를 10개, 20개를 입력해도 제대로 동작한다.


예제 :

	def merge_string(*text_list):
	    result = ''
	    for s in text_list:
	        result += s + ' '
	    return result

	print(merge_string('아버지가', '방에', '들어가시려다가', '부엌으로', '가셔서', '짜장면이',\
			   '싫다고','하셨어'))



문제 160. 위의 코드를 가지고 최대공약수 구하는 함수를 아래와 같이 수행되게 생성하시오 !

	maxyaksu(16, 24)
	8

	def maxyaksu(a, b):
	    dummy = 0
	    i = 1
	    c = 1
	    if a <=  b:
	        dummy = a
	        a = b
	        b = dummy
	    while i < b:
	        i += 1
	        if a%i == 0:
	            a = a / i
	            if b%i == 0:
	                b = b / i
	                c = c * i
	            i = 1
	    return c


문제 161.가변 매개변수를 사용해서 아래와 같이 실행해도 최대공약수가 나오게 하시오 !

	maxyaksu(16, 24, 8, 4)
	4

	def maxyaksu(*n):
	    num = list(n)
	    for j in range(len(n)-1):
	        a = num[j]
	        b = num[j+1]
	        dummy = 0
	        i = 1
	        c = 1
	        if a <=  b:
	            dummy = a
	            a = b
	            b = dummy
	        while i < b:
	            i += 1
	            if a%i == 0:
	                a = a / i
	                if b%i == 0:
	                    b = b / i
	                    c = c * i
	                i = 1
	        num[j+1] = c
	    return c















