@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
■ 지난주 금요일 배웠던 내용 복습

	1. 딕셔너리 데이터 유형 다루는 방법
		- keys
		- values
		- items

	2. 파일 다루는 명령어
		- read
		- readlines

	3. 카카오 알고리즘 문제 (음악 셔플)










■ 139. 화면에서 사용자 입력을 받고 파일로 쓰기 (write)

	예제 : 
		text = input('파일에 저장할 내용을 입력하세요 ~ ')

		f = open('c:\mydata.txt','w')
		f.write(text)
		f.close()



문제 339. 위의 스크립트는 한줄 쓰고 엔터를 치면 바로 종료가 되는데 그렇게 하지 말고 한줄 쓰고 엔터를 쳐도 
	   계속 물어보게 하고 계속 쓸 수 있게 하되 아무것도 안쓰고 그냥 엔터를 치면 종료되게 하시오 

	text_save = []
	while True:
	    text = input('파일에 저장할 내용을 입력하세요 ~ ')
	    text_save.append(text + '\n')
	    if text == '':
	        break
	f = open('c:\mydata.txt','w')
	for i in text_save:
	    f.write(i)
	f.close()

	 - 더 간단한 답
	f = open('c:\mydata.txt','w')
	while True:
	    text = input('파일에 저장할 내용을 입력하세요 ~ ')
	    f.write(text + '\n')
	    if text == '':
	        break
		
	f.close()















■ 140. 텍스트 파일에 한줄씩 쓰기 (writelines)

	text_save = []
	f = open('c:\mydata.txt','w')
	while True:
	    text = input('파일에 저장할 내용을 입력하세요 ~ ')
	    text_save.append(text + '\n')
	    if text == '':
	        break
	f.writelines(text_save)
	f.close()
	
		※ writelines는 리스트 자료형도 파일에 저장할 수 있다.














■ 141. 텍스트 파일 복사하기 ( read, write )

	예제 : 
		f = open('c:\stockcode_part.txt','r')
		h = open('c:\stockcode_copy.txt','w')
		
		data = f.read()
		h.write(data)
		
		f.close()
		h.close()



	※ 특정 폴더 밑에 있는 파일들을 파이썬에서 읽어오는 방법 
		- 폐결절 사진과 정상 폐사진
		- 개와 고양이 사진

	import os
	path_dir = 'c:\\'
	file_list = os.listdir(path_dir)
	file_list.sort()
	for items in file_list:
	    print(items)

		- 파일명만 가지고 오는 듯?













■ 142. 바이너리 파일 복사하기 (read, write)

	"이미지 파일을 파이썬으로 복사하는 방법"

	예제 :
		bufsize = 1024 				# 이미지를 저장할 최소 기본 메모리 사이즈
		f = open('c:\\1.png','rb')		# 이미지가 바이너리 파일이기때문에
		h = open('c:\\1_copy.png', 'wb')	# (이진파일, 숫자로된 파일)

		data = f.read(bufsize)
		
		while data:
		    h.write(data)
		    data = f.read(bufsize)
		    
		f.close()
		h.close()



문제 338. 아래의 개사진 전부를 c드라이브 밑에 image라는 폴더를 만들고 거기에 복사하는 파이썬 코드를 
	  작성하시오 !

	import os
	path_dir = 'c:\\dog_images'
	file_list = os.listdir(path_dir)
	file_list.sort()
	bufsize = 1024
	for items in file_list:
	    f = open('C:\dog_images\\' + items,'rb')
	    h = open('c:\\image\\' + items, 'wb')
	    data = f.read(bufsize)
	    while data:
	        h.write(data)
	        data = f.read(bufsize)    
	    f.close()
	    h.close()












■ 143. 파일을 열고 자동으로 닫기 ( with ~ as )

	예제 :
		f = open('c:\\stockcode.txt','r')
		data = f.readlines()
		print(data)
		f.close() 		# 파일을 닫는 코드를 명시해줬다.



문제 339. 위의 예제를 파일을 닫는 f.close()를 명시하지 않고 자동으로 닫히게 하시오 !

	with open('c:\\stockcode_part.txt', 'r') as f:
	    data = f.readlines()
	    print(data)

	※ 설명 : with ~ as 절을 사용하게 되면 f.close()를 명시하지 않아도 되므로 프로그래머가 실수로
	          f.close()를 작성하지 않아서 코드 실행할 때 메모리 부족 오류가 나는 것을 예방할 수
		  있다.
















■ 144. 파일의 특정 부분만 복사하기 (seek, read, write)

	"파일을 전부 copy 하는게 아니라 일부분만 copy하는 방법"

	예제 : 
		spos = 105 	# 파일을 읽는 위치 지정 105바이트 위치부터
		size = 500 	# 읽을 크기를 지정 500 바이트 까지
		f = open("c:\\stockcode_part.txt",'r')
		h = open('c:\\stockcode.txt', 'w')
		
		f.seek(spos)
		data = f.read(size)
		h.write(data)
		
		h.close()
		f.close()













■ 145. 파일 크기 구하기 (ospathgetsize)

	예제 :
		from os.path import getsize
	
		file1 = "c:\\stockcode_part.txt"
		file2 = "c:\\1.png"
		
		file_size1 = getsize(file1)
		file_size2 = getsize(file2)
		
		print( 'file name : %s / file size : %d' %(file1, file_size1))
		print( 'file name : %s / file size : %d' %(file2, file_size2))














■ 146. 파일 삭제하기 (osremove)

	예제 : 
		from os import remove
		target_file = 'c:\\stockcode_copy.txt'
		k = input('[%s] 파일을 삭제하시겠습니까? ( Y / N)' %target_file)
		if k == "Y":
		    remove(target_file)
		    print('[%s]를 삭제했습니다.' %target_file)

			설명 : shift + delete와 같은 작동이 일어난다.



문제 340. (점심시간문제) 위의 코드를 가지고 파일명을 물어보게하고 파일명을 입력하면 해당 파일이 
			 삭제가 되는 코드를 작성하시오 !

	def delete_file():
	    target_file = input('삭제하고 싶은 파일을 입력하세요 ~ ')
	    remove(target_file)
	    print ('[%s]를 삭제했습니다.' %target_file)
	
	delete_file()

	# 삭제하고싶은 파일을 입력하세요 ~ c:\\mydata.txt
	# [c:\\mydata.txt]를 삭제했습니다.













■ 147. 파일 이름 바꾸기 ( osrename)

	예제 : 
		from os import rename
		target_file = 'c:\\stockcode.txt'
		newname = input('[%s]에 대한 새로운 파일 이름을 입력하세요 : ' %target_file)
		rename(target_file,newname)
		print('[%s] --> [%s]로 파일이름이 변경되었습니다.' %(target_file, newname))

		# [c:\stockcode.txt]에 대한 새로운 파일 이름을 입력하세요 : c:\\ffff.txt
		# [c:\stockcode.txt] --> [c:\\ffff.txt]로 파일이름이 변경되었습니다.











■ 148. 파일 위치 바꾸기


	from os import rename
	
	target_file = 'stockcode_part.txt'
	
	newpath = input('[%s]를 이동할 디렉터리의 절대경로를 입력하세요: ' %target_file)
	
	if newpath[-1] == '/':
	   newname = newpath + target_file
	else:
	   newname = newpath + '/' + target_file
	
	try:
	   rename(target_file, newname)
	   print('[%s] -> [%s]로 이동되었습니다.' %(target_file, newname))
	except FileNotFoundError as e:
	   print(e)













■ 149. 디렉토리에 있는 파일목록 얻기 (oslistdir)

	"딥러닝때 사용할 데이터 전처리 코드 작성"

	※ 딥러닝 수업때 사용할 코드가 크게 2가지

		1. 이미지 데이터를 파이썬으로 로드하는 함수
		2. 신경망 구현함수


문제 341. 폐사진 폴더에 있는 이미지들을 불러오는 함수를 생성하시오 !

	import os
	
	test_image = 'c:\\lungs\\image'
	
	def image_load(path):
	    file_list = os.listdir(path)
	    return file_list
	print(image_load(test_image) )



문제 342. 위의 스크립트를 수정해서 png 떼어 버리고 아래와 같이 출력되게 하시오 !

	import os
	import re
	test_image = 'c:\\lungs\\image'
	
	def image_load(path):
	    file_list = os.listdir(path)
	    f_list = []
	    for i in file_list:
	        st = re.sub('[^0-9]', '', i)
	        f_list.append(st)
	    return f_list
	print(image_load(test_image) )
	# ['1', '10', '100', '1000', '1001', '1002', ........ ]



문제 343. 아래의 결과를 1, 2, 3, 4, 5 ... 순으로 정렬되게 하시오 !

	import os
	import re
	test_image = 'c:\\lungs\\image'
	
	def image_load(path):
	    file_list = os.listdir(path)
	    file_list.pop()
	    f_list = []
	    for i in file_list:
	        st = re.sub('[^0-9]', '', i)
	        f_list.append(int(st))
	        f_list.sort()
	    return f_list
	print(image_load(test_image) )
	# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ........]



문제 344. 위의 예제를 이용해서 아래와 같이 결과가 출력되게 하시오 !

	import os
	import re
	test_image = 'c:\\lungs\\image'
	
	def image_load(path):
	    file_list = os.listdir(path)
	    file_list.pop()
	    f_list = []
	    for i in file_list:
	        st = re.sub('[^0-9]', '', i)
	        f_list.append(int(st))
	    f_list.sort()
	    f_sort_list = []
	    for i in f_list:
	         f_sort_list.append(str(i) + '.png')
	    return f_sort_list
	print(image_load(test_image) )	
	# ['1.png', '2.png', '3.png', '4.png', '5.png', '6.png', '7.png', '8.png', ........]



문제 345. 이미지 앞에 절대 경로가 아래처럼 붙게 하시오 !

	import os
	import re
	test_image = 'c:\\lungs\\image'
	
	def image_load(path):
	    file_list = os.listdir(path)
	    file_list.pop()
	    f_list = []
	    for i in file_list:
	        st = re.sub('[^0-9]', '', i)
	        f_list.append(int(st))
	    f_list.sort()
	    f_sort_list = []
	    if test_image[-1] == '\\' :
	        for i in f_list:
	            f_sort_list.append(test_image + str(i) + '.png')
	    else:
	        for i in f_list:
	            f_sort_list.append(test_image + '\\' + str(i) + '.png')
	
	        return f_sort_list
	print(image_load(test_image) )
	#['c:\\lungs\\image\\1.png', 'c:\\lungs\\image\\2.png', 'c:\\lungs\\image\\3.png', .....]



문제 346. 위의 이미지들을 딥러닝 신경망에 넣기 전의 데이터인 숫자 배열로 만들기 위해서 cv2.imread 함수
	   를 이용해서 list로 변환하시오 !

	# 아나콘다 프롬프트 창 열고
	# (base) C:\Users\Administrator>conda install opencv
	
	import cv2
	import os
	import re
	test_image = 'c:\\lungs\\image'
	
	def image_load(path):
	    file_list = os.listdir(path)
	    file_list.pop()
	    f_list = []
	    for i in file_list:
	        st = re.sub('[^0-9]', '', i)
	        f_list.append(int(st))
	    f_list.sort()
	    f_sort_list = []
	    if test_image[-1] == '\\' :
	        for i in f_list:
	            f_sort_list.append(test_image + str(i) + '.png')
	    else:
	        for i in f_list:
	            f_sort_list.append(test_image + '\\' + str(i) + '.png')
	    image = []
	    for j in f_sort_list:
	        img = cv2.imread(j)
	        image.append(img)
	    return image

	print(image_load(test_image) )

	결과 :    빨강 녹색  파랑
	[array([[[ 16,  16,  16],
	        [ 16,  16,  16],
	        [ 16,  16,  16],
	        ..., 
	        [182, 182, 182],
	        [187, 187, 187],
	        [191, 191, 191]],












■ 150. 워킹 디렉토리 확인하고 바꾸기

	 - 워킹 디렉토리 확인하기
		import os
		pdir = os.getcwd()
		print(pdir)
		# C:\Users\Administrator\PycharmProjects

				↑

			프로젝트 워킹 디렉토리 (project, .py가 저장된다.)

	- 워킹 디렉토리 변경하기 
		import os
		pdir = os.getcwd()
		os.chdir("c:\\")
		print(os.getdir())

		# 워킹 디렉토리가 c:\\ 로 변경됨
		









■ 151. 디렉토리 생성하기 (osmkdir)

	import os
	newfolder = input('새로 생성할 디렉토리 이름을 입력하세요 : ')
	os.mkdir(newfolder)
	
	# 새로 생성할 디렉토리 이름을 입력하세요 : nerwe
	# C:\Users\Administrator\PycharmProjects 에 nerwe폴더가 생김 !



문제 347. 위의 스크립트를 수정해서 폴더를 생성했으면 아래와 같이 결과가 출력되게 하시오 !

	# 새로 생성할 디렉토리 이름을 입력하세요 : dddd
	# C:\Users\Administrator\PycharmProjects 밑에 dddd라는 폴더를 생성했습니다.
	
	import os
	pdir = os.getcwd()
	newfolder = input('새로 생성할 디렉토리 이름을 입력하세요 : ')
	os.mkdir(newfolder)
	print('%s 밑에 %s라는 폴더를 생성했습니다.' %(pdir, newfolder))











■ 152. 디렉토리 제거하기 (osrmdir)

	 예제 : 
		c드라이브 밑에 data7이라는 폴더를 만들고 테스트 하시오 !
		
		import os 
		target_folder = 'c:\\data7'
		os.rmdir(target_folder)
	


문제 346. 다시 data7 폴더를 생성하는데 이번에는 폴더 생성후에 파일을 몇개 넣은 후에 파이썬 코드로 삭제
	  해 보시오 !

	import os 
	target_folder = 'c:\\data7'
	os.rmdir(target_folder)

	# OSError: [WinError 145] 디렉터리가 비어 있지 않습니다: 'c:\\data7'













■ 153. 하위 디렉토리 및 파일 전체 삭제하기 (shutilrmtree)

	import os
	import shutil
	
	target_folder= 'c:\\data7'
	shutil.rmtree(target_folder)














■ 154. 파일이 존재하는지 체크하기 (ospathexists)

	# c드라이브 밑에 data7 폴더를 생성한 후에 테스트 하세요 ~
	
	from os.path import exists
	
	target_folder = 'c:\\data7'
	exists(target_folder)



문제 349. 아래와 같이 폴더를 생성하는 스크립트를 작성하는데 폴더가 이미 존재하면 "이미 존재합니다." 라
	  는 메세지가 출력되게 하시오 !

	from os.path import exists
	import os
	newfolder = input('새로 생성할 디렉토리 이름을 입력하세요 : ')
	if exists(newfolder) == True:
	    os.mkdir(newfolder)
	else:
	    print('폴더가 이미 존재합니다.')

	# 새로 생성할 디렉토리 이름을 입력하세요 : d:\\data7
	# 폴더가 이미 존재합니다.












■ 155. 파일인지 디렉토리인지 확인하기 (ospathisfile, ospathisdir)

	예제 : 
		import os 
		from os.path import exists, isdir, isfile
		files = os.listdir()
		
		for file in files:
		    if isdir(file):
		        print('DIR : %s' %file)
		        
		for file in files:
		    if isfile(file):
		        print('FILE : %s' %file)



문제 350. (오늘의 마지막 문제) 오라클 next_day함수를 파이썬으로 구현하시오 !

	def next_day(date,week):
	    week_dic = {}
	    week_dic['월요일'] = 0
	    week_dic['화요일'] = 1
	    week_dic['수요일'] = 2
	    week_dic['목요일'] = 3
	    week_dic['금요일'] = 4
	    week_dic['토요일'] = 5
	    week_dic['일요일'] = 6
	    import datetime as d
	    from datetime import datetime as da
	    date1 = d.datetime.strptime(date, '%Y-%m-%d')
	    date_week = da.weekday(date1) 
	    result = date1 + d.timedelta(days = (7 - date_week) + week_dic[week])
	    return result
	
	print(next_day('2018-12-10','수요일'))
	print(next_day('2018-12-10','월요일'))

	# 2018-12-19 00:00:00
	# 2018-12-17 00:00:00










