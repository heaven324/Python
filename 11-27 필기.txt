■ 어제 배웠던 내용 복습

	1. 파일 열고/닫기
	2. 모듈과 패키지 import
	3. 클래스

	 * 클래스를 사용해야 하는 이유?

		클래스를 사용하지 않으면 동일한 코드의 함수를 반복 코딩해야하는 번거로움이 생긴다.

	예제 :  1. 계산기 클래스
		2. 총클래스
		3. 고릴라 클래스
		4. 영화 카드 클래스








■ 50. 클래스 멤버와 인스턴스 멤버 이해하기

	* 용어설명 

		gun1 = Gun()
		 ↑     ↑
		객체  클래스(설계도)

		gun2 = Gun()

	     gun1과 gun2는 클래스는 동일하지만 객체는 서로 다르다.

		인스턴스 = 클래스()		# 클래스를 가지고 객체(인스턴스)를 생성 했다!


 * 클래스에서 사용하는 변수 2가지

	1. 클래스 변수 ? 객체에 의해서 변경이 되면 안되는 변수, 반드시 고정값으로 사용되어야만 하는
			 데이터는 클래스로 선언해서 사용한다.
			 단체의 단체명과 같이 클래스로 만들어진 모든 인스턴스가 공유하는 데이터를 담는
			 변수

	2. 인스턴스 변수 ? 객체에 의해서 변경이 될 수 있는 데이터의 변수
			   사람의 이름과 같이 각각의 인스턴스마다 가지고 있는 고유한 데이터를 담는 변수


	예제 : 클래스 변수의 예제
		"회사의 사원을 관리하는 클래스(설계도)를 생성"

	class Employees:
	    raise_amount = 1.1 					# 클래스 변수
	    
	    def __init__(self, first, last, pay):		# 생성자(인자) 초기화
	        self.first = first
	        self.last = last
	        self.pay = pay
	        self.email = first.lower() + '.' + last.lower() + '@gmail.com'
	        
	    def full_name(self): 				# 사원 전체이름을 출력하는 함수
	        return '{}{}'.format(self.first, self.last)
	    
	    def apply_raise(self): 				# 월급을 인상하는 함수
	        self.pay = int( self.pay*self.raise_amount)	# 인스턴스 변수 사용
	       #self.pay = int( self.pay*Employees.raise_amount)# 클래스 변수(무조건 1.1)
	emp_yongsik = Employees('yongsik','kim',5000000)



문제 174. 위의 Employee설계도를 가지고 emp_yongsik객체를 실체화 시켜서 기존 월급과 인상된 월급 2가지를
	  같이 print하시오

	print(emp_yongsik.pay)		# 5000000 출력
	emp_yongsik.apply_raise()
	print(emp_yongsik.pay)		# 5500000 출력




문제 175. 용식과 후림이 사원 객체를 아래와 같이 생성하고 월급도 동일하게 해서 각각 프린트 해보시오 !

	emp_yongsik = Employees('yongsik','kim',5000000)
	emp_huryim = Employees('huryim', 'lee', 5000000)	

	emp_huryim.raise_amount = 1.2 			# 이 작업을 못하게 막을때 = 클래스변수로 선언!

	print(emp_yongsik.pay)
	emp_yongsik.apply_raise()
	print(emp_yongsik.pay)
	
	print(emp_huryim.pay)
	emp_huryim.apply_raise()
	print(emp_huryim.pay)








■ 51. 클래스 메소드 애해하기

	class MyClass:		# 낙타등 표기법 (CamelCase)
	    def sayHello(self):
	        print('안녕하세요')
	        
	    def sayBye(self, name):
	        print('%s! 다음에 보자!' %name)
	        
	obj = MyClass()
	obj.sayHello()		# 객체.메소드()
	obj.sayBye('철수')


	예제 : gun = Gun()
	        ↓    ↓
	       객체  클래스

		gun.shoot(3)				# .(점) 붙이고 쓰면 메소드 ?
		 ↓    ↓
		객체  메소드

		[1, 2, 3, 4, 5]
		       ↓
		      객체

		[1, 2, 3, 4, 5].count(2)
			↓         ↓
		       객체      메소드


 * 리스트 변수(객체)의 유용한 메소드

	1. count()
	2. append()
	3. insert()
	4. remove()
	5. pop()
	6. index()
	7. sort()
	8. reverse()

		a = [1, 2, 3, 4, 5]
		a.count(2)
		   변수 a는 리스트 객체의 메모리 주소를 가지고 있어서 a.count(2)라고 하면 a를 통하여
		   [1, 2, 3, 4, 5] 객체의 count 메소드를 실행한 것이다.



문제 176. (점심시간 문제) 아래와 같이 고릴라 두 객체를 생성하는데 고릴라가 태어날때 부터 바나나를
			  뱃속에 넣고 태어날 수 있게 클래스를 생성하시오 !

	anwooyong_gorilla = Gorilla(10)		# 바나나 10개 충전하면서 생성
	gehyuk_gorila = Gorilla(10)		# 바나나 10개 충전하면서 생성
	anwooyong_gorilla.shout(3)
	우와~~~~~~~~~
	우와~~~~~~~~~
	우와~~~~~~~~~

	class Gorilla:
	    def __init__(self, num):
	        self.banana = num
	        
	    def eat(self, num):
	        self.banana = num
	        print('고릴라가 바나나 {}개를 먹었습니다.'.format(num))
	        
	    def shout(self, num):
	        for i in range(num):
	            if self.banana > 0:
	                print('우와~~~~~~~~~')
	                self.banana -= 1
	                if self.banana == 0:
	                    print('바나나가 없으면 배가 고파 걸을 수 없습니다.')
	                    print('바나나가 없으면 배가고파 소리를 지를 수 없습니다.')
	                    break
	
	    def walk(self, num):
	        for i in range(num):
	            if self.banana > 0:
	                print('뚜벅 !')
	                self.banana -= 1
	                if self.banana == 0:
	                    print('바나나가 없으면 배가 고파 걸을 수 없습니다.')
	                    print('바나나가 없으면 배가고파 소리를 지를 수 없습니다.')
	                    break
	    
	    def print(self):
	        print('고릴라 뱃속에 바나나가 {}개 남았습니다.'.format(self.banana))








■ 기초 통계에 필요한 함수들 생성

	1. 중심 성향을 분석하는 통계방법
	   평균값, 중앙값, 최빈값, 분산, 표준편차, 범위, 사분위수 범위

	2. 그래프
	   막대 그래프, 원형 그래프, plot 그래프, 라인 그래프, 사분위수 그래프



문제 177. 7기 학생들의 나이 평균과 8기 학생들의 나이 평균을 구하시오 !

	import numpy as np
	
	age_8 = [26,27,27,27,26,27,28,31,28,27,25,26,23,26,26,25,24,26,31,40,28,30,33,27,32,27,26]
	age_7 = [28,27,24,27,28,28,26,27,28,26,26,27,25,27,26,25,27,29,25,28,26,25,28,25,24,27,32,\
		 28,28,24]
	
	a = np.array(age_7) # 일반 리스트를 numpy형 리스트로 변환
	b = np.array(age_8) # 일반 리스트를 numpy형 리스트로 변환
	
	print(a.mean())
	26.7

	print(b.mean())
	27.74074074074074



문제 178. 7기와 8기학생들의 나이의 중앙값(가운데 값)을 출력하시오 !

	import numpy as np
	
	age_8 = [26,27,27,27,26,27,28,31,28,27,25,26,23,26,26,25,24,26,31,40,28,30,33,27,32,27,26]
	age_7 = [28,27,24,27,28,28,26,27,28,26,26,27,25,27,26,25,27,29,25,28,26,25,28,25,24,27,32,\
		 28,28,24]
	
	a = np.array(age_7) # 일반 리스트를 numpy형 리스트로 변환
	b = np.array(age_8) # 일반 리스트를 numpy형 리스트로 변환
	
	print( np.median(a))
	27.0
	print( np.median(b))
	27.0



 * 평균말고 중앙값이 필요한 이유?

	석우형님 나이를 290으로 바꾸고 두값을 비교하면

	석우형님 나이 290
	37.0			# 평균
	27.0			# 중앙값

	석우형님 나이 40
	27.74074074074074	# 평균
	27.0			# 중앙값

	평균값은 이상치 데이터(잡음 데이터)에 민감해서 평균값만 가지고 데이터를 대표하기에는 정보가
	부족하기 때문에 중앙값이 필요하다.

	 


☆ 최빈값 ?	가장 빈번하게 출현하는 데이터


문제 179. 위의 9기 학생들의 최빈값을 구하시오 !

	age_9 = [2,2,2,2,2,2,2,2,2,2,52,52,52,52,52,52,52,52,52,52]
	
	import numpy as np
	from collections import Counter
	cnt = Counter(age_9)
	print(cnt.most_common()[0:3])


	



☆ 분산과 표준편차

	분산 ? 데이터의 퍼짐정도 (평균에서 거리가 얼마나 떨어졌는지 )

	표준편차 ? 평균에 대한 오차

	
문제 180. 어느 학습 성적 표준편차가 작다는 것은 다음 중 무엇을 의미하는가?

	1. 성적이 나쁘다.
	2. 성적이 비슷하다.	#답
	3. 성적이 우수하다.
	4. 성적에 차이가 많다.



문제 181. 7기와 8기의 분산을 각각 구해보시오 !

	age_8 = [26,27,27,27,26,27,28,31,28,27,25,26,23,26,26,25,24,26,31,40,28,30,33,27,32,27,26]
	age_7 = [28,27,24,27,28,28,26,27,28,26,26,27,25,27,26,25,27,29,25,28,26,25,28,25,24,27,32,\
		 28,28,24]

	print(np.var(age_7))
	print(np.var(age_8))

	2.8766666666666665
	11.080932784636488



문제 182. 7기와 8기의 나이의 표준편차를 각각 구해보시오 !

	age_8 = [26,27,27,27,26,27,28,31,28,27,25,26,23,26,26,25,24,26,31,40,28,30,33,27,32,27,26]
	age_7 = [28,27,24,27,28,28,26,27,28,26,26,27,25,27,26,25,27,29,25,28,26,25,28,25,24,27,32,\
		 28,28,24]

	print(np.std(age_7))
	print(np.std(age_8))

	1.69607389776114
	3.328803506462418


☆ 범위, 사분위수 범위

	* 범위 : 최대값 - 최소값

	* 사분위수 범위
		전체 데이터를 정렬했을 때 갯수를 4등분 한 분위수를 의미

		제1 사분위수(Q1) : 데이터의 25%가 이 값보다 작거나 같음. 		 
		제2 사분위수(Q2) : 데이터의 50%가 이 값보다 작거나 같음.(중위수) 
		제3 사분위수(Q3) : 데이터의 75%가 이 값보다 작거나 같음.  
		
		사분위간 범위    : 제1 사분위수와 제3 사분위수 간의 거리(Q3-Q1)이므로, 데이터의 중간 
				   50%에 대한 범위입니다.  
	


문제 183. 7기와 8기 학생들의 나이의 범위 데이터값을 각각 구하시오 !

	def rang(data):
	    return max(data) - min(data)
	
	age_8 = [26,27,27,27,26,27,28,31,28,27,25,26,23,26,26,25,24,26,31,40,28,30,33,27,32,27,26]
	age_7 = [28,27,24,27,28,28,26,27,28,26,26,27,25,27,26,25,27,29,25,28,26,25,28,25,24,27,32,28,28,24]
	age_9 = [2,2,2,2,2,2,2,2,2,2,52,52,52,52,52,52,52,52,52,52]
	
	print(rang(age_7))
	print(rang(age_8))



문제 184. 사분위수 범위를 구하는 함수를 생성하고 7기와 8기의 사분위수 범위를 구하시오! ( Q3  - Q1 )
											 75%   25%
	def data_range(args):
	    import numpy as np
	    result = np.quantile(args, 0.75) - np.quantile(args, 0.25)
	    return result
	print(data_range(age_7))



★ 그래프

	<<<<< 파이썬 그래프 총정리  >>>>>
	
	☆ 1. 라인 그래프 그리기
	
		import  numpy as np
		import matplotlib.pyplot as plt		# 그래프를 그릴 수 있는 함수들이 있음
		
		x = np.array([0,1,2,3])			# x축 데이터를 생성
		y = np.array([-1,0.2,0.9,2.1])		# y축 데이터를 생성
		
		plt.plot(x,y)				# 점을 찍음
		plt.grid(True)				# 모눈종이
		plt.show()				# 그림을 출력


문제 185. 아래의 직선의 방정식을 그래프로 시각화 하시오 !

	y = 4x + 10

	import  numpy as np
	import matplotlib.pyplot as plt
	
	x = np.arange(-10, 10)
	y = np.array(4*x + 10)
	
	plt.plot(x,y)
	plt.grid(True)
	plt.show()



★ 막대 그래프

	예제:

	import numpy as np
	import matplotlib.pyplot as plt
	
	y1_value = (21.6, 23.6, 45.8, 77.0, 102.2, 133.3, 327.9, 348.0, 137.6, 49.3, 53.0, 24.9)
	x_name=('1', '2', '3', '4', '5','6', '7', '8', '9', '10', '11', '12')
	n_groups = len(x_name)
	index = np.arange(n_groups)
	
	plt.bar(index, y1_value, tick_label=x_name, align='center')	# align : 막대 위치 왼,오, 중앙
	
	plt.xlabel('month')
	plt.ylabel('average rainfall (mm)')
	plt.title('Weather Bar Chart')
	plt.xlim( -1, n_groups)
	plt.ylim( 0, 400)
	plt.show()


문제 186. 아래의 데이터를 막대그래프로 시각화 하시오 !

	y1_value = (5600, 4150, 5000, 8275, 6000)
	x_name=('SALESMAN', 'CLERK', 'PRESIDENT', 'MANAGER', 'ANALYST')
		
	import numpy as np
	import matplotlib.pyplot as plt
	
	y1_value = (5600, 4150, 5000, 8275, 6000)
	x_name=('SALESMAN', 'CLERK', 'PRESIDENT', 'MANAGER', 'ANALYST')
	n_groups = len(x_name)
	index = np.arange(n_groups)
	
	plt.bar(index, y1_value, tick_label=x_name, align='center', color =['red','blue','green','yellow'\
									    ,'purple'], width = 0.5)
	
	plt.xlabel('job')
	plt.ylabel('sum(sal)')
	plt.title('EMP')
	plt.xlim( -1, n_groups)
	plt.ylim( 0, 10000)
	plt.show()



문제 187. 아래의 데이터를 막대그래프로 시각화 하시오 !

	y1_value = (800, 22825, 4300, 1100)
	x_name=('1980', '1981', '1982', '1983')
	
	import numpy as np
	import matplotlib.pyplot as plt
	
	y1_value = (800, 22825, 4300, 1100)
	x_name=('1980', '1981', '1982', '1983')
	n_groups = len(x_name)
	index = np.arange(n_groups)
	
	plt.bar(index, y1_value, tick_label=x_name, align='center', color = ['red','blue','green','purple'],\
	        width = 0.5)
	
	plt.xlabel('year')
	plt.ylabel('sum(sal)')
	plt.title('EMP')
	plt.xlim( -1, n_groups)
	plt.ylim( 0, 25000)
	plt.show()



★ 3. 원형 그래프 

	막대 그래프가 단순히 크기비교라면 원형그래프는 백분율 표시를 시각화 할때 유용하다.

	예제 :
	
		import matplotlib.pyplot as plt
		import numpy as np
		from matplotlib import font_manager, rc
		from matplotlib import style
	
		font_name = font_manager.FontProperties(fname="c:/Windows/Fonts/malgun.ttf").get_name()
		rc('font', family=font_name)
		style.use('ggplot')
	
		labels = ['삼성전자', 'SK하이닉스', 'LG전자', '네이버', '카카오']
		ratio = [50, 20, 10, 10, 10]
		plt.pie(ratio, labels=labels, shadow=True, startangle=90)
		plt.show()



문제 188. 아래의 데이터를 원형그래프로 시각화 하시오 !
	( 백분율로 표시하시오 ! )

	import matplotlib.pyplot as plt
	import numpy as npc
	
	labels = ['SALESMAN', 'CLERK', 'PRESIDENT', 'MANAGER', 'ANALYST']
	ratio = [5600, 4150, 5000, 8275, 6000]
	explode = (0.0, 0.5, 0.0, 0.0, 0.0)
	colors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue', 'red']
	
	plt.pie(ratio, explode=explode, labels=labels, shadow=False, startangle=90, colors=colors, \
		autopct='%1.1f%%')
	plt.show()



★ 4. plot 그래프 


	import numpy as np
	import matplotlib.pyplot as plt

	np.random.seed(5)				# seed : 랜덤값이 일률적으로 뽑힌다.
	x = np.arange(1, 101)
	y = 20 + 3 * x + np.random.normal(0, 60, 100)	# (평균, 표준편차, 갯수)
	plt.plot(x, y, "o")				# "o" 점모양
	plt.show()



문제 189. (오늘의 마지막 문제) 7기와 8기의 나이데이터를 plot 그래프로 각각 시각화 하시오 !

	import numpy as np
	import matplotlib.pyplot as plt
	
	age_8 = [26,27,27,27,26,27,28,31,28,27,25,26,23,26,26,25,24,26,31,40,28,30,33,27,32,27,26]
	age_7 = [28,27,24,27,28,28,26,27,28,26,26,27,25,27,26,25,27,29,25,28,26,25,28,25,24,27,32,28,28,24]
	
	x = np.arange(1, len(age_7)+1)
	y = np.array(age_7)
	
	plt.plot(x, y, "o")
	plt.title('age_7')
	plt.ylim( 22, 45)
	plt.show()
	
	x = np.arange(1, len(age_8)+1)
	y = np.array(age_8)
	
	plt.plot(x, y, "o")
	plt.title('age_8')
	plt.ylim( 22, 45)
	plt.show()
























