■ 어제 배운 내용 복습

	1. 카카오 경력파트 알고리즘 문제

	2. 리스트의 여러 메소드들
		- insert
		- append
		- del
		- index
		- count
		- len
		- sort
		- sorted
		- reverse
		- reversed
		- shuffle


문제 316. 아래의 두개의 리스트를 아래의 결과로 출력하시오 !

	solar1 = ['태양','수성','금성','지구','화성','목성','토성','천왕성','해왕성']
	solar2 = ['Sun', 'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune']
	solar_union = []
	for ind, name in enumerate(solar1):	#for i in solar1:
	    solar_union.append(name)		#    solar_union.append(i)
	    solar_union.append(solar2[ind])	#    solar_union.append(solar2[solar1.index(i)])
						#이렇게도 가능함
	pr_solar = ''			#for i in solar_union:
	for i in solar_union:		#print(i, end=' ')
	    pr_solar += i + ', '	#이렇게 할 수도 있음

	print(pr_solar[:-2])
	# 결과 : 태양, Sun, 수성, Mercury, 금성, Venus, 지구, Earth, 화성, Mars, 목성, Jupiter, 토성, 
	# Saturn, 천왕성, Uranus, 해왕성, Neptune













■ 124. 사전의 특정 요소 값 변경하기 


문제 317. 아래의 딕셔너리의 값중에서 Let it be를 Woman으로 변경하시오 !

	dic = {}
	dic['Beatles'] = ['Yesterday', 'let it be', 'Hey Jude']
	dic['소녀시대'] = ['소원을 말해봐', 'Gee', '다만세']
	
	dic['Beatles'][1] = 'Woman'
	print(dic)	
	# 결과 : {'Beatles': ['Yesterday', 'Woman', 'Hey Jude'], '소녀시대': ['소원을 말해봐', 
	#         'Gee', '다만세']}








■ 125. 사전의 특정 요소 제거하기 (del)


문제 318. 아래의 딕셔너리에서 소녀시대의 키와 값을 전부 지우시오 !

	dic = {}
	dic['Beatles'] = ['Yesterday', 'let it be', 'Hey Jude']
	dic['소녀시대'] = ['소원을 말해봐', 'Gee', '다만세']
	del dic['소녀시대']

	print(dic)
	# 결과 : {'Beatles': ['Yesterday', 'let it be', 'Hey Jude']}











■ 126. 사전의 모든 요소 제거하기 (clear)


문제 319. 아래의 리스트에 모든 요소를 다 삭제하시오 !

	dic = {}
	dic['Beatles'] = ['Yesterday', 'let it be', 'Hey Jude']
	dic['소녀시대'] = ['소원을 말해봐', 'Gee', '다만세']
	dic.clear()
	
	print(dic)
	# 결과 : {}












■ 127. 사전에서 키만 추출하기 (keys)


문제 320. 아래의 딕셔너리에서 Key에 해당하는 부분만 추출하시오 !

	dic = {}
	dic['Beatles'] = ['Yesterday', 'let it be', 'Hey Jude']
	dic['소녀시대'] = ['소원을 말해봐', 'Gee', '다만세']
	    
	pr_dic = ''
	for i in dic.keys():
	    pr_dic += i + ', '
	print(pr_dic[:-2])
	# 결과 : Beatles, 소녀시대














■ 128. 사전에서 값만 추출하기 (values)


문제 321. 아래의 딕셔너리에서 값만 추출하시오 !

	dic = {}
	dic['Beatles'] = ['Yesterday', 'let it be', 'Hey Jude']
	dic['소녀시대'] = ['소원을 말해봐', 'Gee', '다만세']
	
	for i in dic.values():
	    for j in i:
	        print(j, end = ', ')
		# 결과 : Yesterday let it be Hey Jude 소원을 말해봐 Gee 다만세 


문제 322. 아래의 딕셔너리에서 아래의 값만 추출하시오 !

	dic = {}
	dic['Beatles'] = ['Yesterday', 'let it be', 'Hey Jude']
	dic['소녀시대'] = ['소원을 말해봐', 'Gee', '다만세']
	
	for i in dic.keys():
	    print(dic[i][0], end = ' ')
	    # 결과 : Yesterday 소원을 말해봐



문제 323. 아래의 딕셔너리에서 아래의 값들을 추출하시오 !

	dic = {}
	dic['Beatles'] = ['Yesterday', 'let it be', 'Hey Jude']
	dic['소녀시대'] = ['소원을 말해봐', 'Gee', '다만세']
	
	box2 = list(dic.values())
	for i in range(len(box2[0])):
	    for j in range(len(box2)):
	               print(box2[j][i], end = ' ')
			# 결과 : Yesterday 소원을 말해봐 let it be Gee Hey Jude 다만세 



문제 324. 문제 323번 코드에 shuffle기능을 추가해서 수행 될 때마다 곡이 섞여서 나오게 하시오 !

	from random import shuffle
	dic = {}
	dic['Beatles'] = ['Yesterday', 'let it be', 'Hey Jude']
	dic['소녀시대'] = ['소원을 말해봐', 'Gee', '다만세']
	for  i in dic:
	    shuffle(dic[i])
	    
	box2 = list(dic.values())
	shuffle(box2)
	for i in range(len(box2[0])):
	    for j in range(len(box2)):
	               print(box2[j][i], end = ' ')
			# 결과 : Yesterday Gee let it be 다만세 Hey Jude 소원을 말해봐



문제 325. (점심시간 문제) 아래와 같이 소녀시대 곡을 하나 더 추가하고 잘 shuffle되게 하시오 !

	from random import shuffle
	dic = {}
	dic['소녀시대'] = ['소원을 말해봐', 'Gee', '다만세', 'Oh!']
	dic['Beatles'] = ['Yesterday', 'let it be', 'Hey Jude']
	for  i in dic:
	    shuffle(dic[i])
	    
	box2 = list(dic.values())
	for i in range(len(box2[1])):
	    for j in range(len(box2)):
	        print(box2[j][0], end = '     ')
	        del box2[j][0]
	        
	for i in box2:
	    if i != []:
	        print(i[0])
	        del box2[box2.index(i)][0]








■ 129. 사전 요소를 모두 추출하기 (items)

	* 딕셔너리 자료형에서 데이터를 추출하는 방법 
		1. key 만 추출 : box.keys()
		2. 값만 추출 : box.values()
		3. 둘다 추출 : box.items()



문제 326. 아래의 딕셔너리의 모든 요소를 다 출력하시오 !

	dic = {'Beatles':['Yesterday','let it be','Hey Jude'], \
	 '소녀시대':['소원을 말해봐','Gee','다만세'] }
	dic.items()
	
	# 결과 :
	# dict_items([('Beatles', ['Yesterday', 'let it be', 'Hey Jude']), ('소녀시대', ['소원을 말해봐'
	#	       , 'Gee', '다 만세'])])











■ 130. 사전 정렬하기(sorted)


문제 327. 아래의 딕셔너리 데이터의 키값을 ABCD순으로 정렬해서 출력하시오 !

	names = {'Mary':10999, 'Sams':2111, 'Aimy':9778, 'Tom':20245, 
	'Michale':27115, 'Bob':5887, 'Kelly':7855}
	sorted(names)
	
	# 결과 : ['Aimy', 'Bob', 'Kelly', 'Mary', 'Michale', 'Sams', 'Tom']



문제 328. 아래의 딕셔너리 데이터의 키값을 ABCD순으로 정렬하고 값도 출력하시오 !

	names = {'Mary':10999, 'Sams':2111, 'Aimy':9778, 'Tom':20245, 
	'Michale':27115, 'Bob':5887, 'Kelly':7855}
	name_items = list(names.items())
	print(sorted(name_items))
	
	# 결과 : [('Aimy', 9778), ('Bob', 5887), ('Kelly', 7855), ('Mary', 10999), ('Michale', 27115),
		  ('Sams', 2111), ('Tom', 20245)]












■ 131. 문자 코드 값 구하기(ord)

	ASCII코드 값을 출력하는 함수

	A ---------------------> 65
		인코딩

	예제 : print(ord('A'))


문제 329. 알파벳 대문자 A ~ Z까지의 ascii코드값을 출력하시오 !

	import string
	alpha = string.ascii_uppercase
	for i in alpha:
	    print(i, '-->', ord(i))

	    # 결과 :
	    # A --> 65
	    # B --> 66
	    # C --> 67
	    #     :
	    # Y --> 89
	    # Z --> 90












■ 132. 코드값에 대응하는 문자 얻기(chr)

	예제 : print(chr(65))














■ 133. 문자열로 된 식을 실행하기 (eval)

	"문자열을 명령문으로 인식하게 하는 함수"

	예제 : 
		a = '2+3'
		print(a, '=', eval(a))
		# 결과 : 2+3 = 5



문제 330. eval을 이용해서 구구단 2단을 출력하시오 !

	a = '2*i'
	for i in range(1,10):
	    print('2 * %d = %d' %(i, eval(a)))

	다른방식 : 
		for i in range(1,10):
		    a = '2*%d'%i
		    print(a, eval(a))
		# 2 * 1 = 2
		# 2 * 2 = 4
		#     :
		#     :
		# 2 * 9 = 18










■ 134. 이름없는 한줄짜리 함수 만들기(lambda)

	예제 : 	add = lambda x,y : x+y
			 입력값   실행문
		print(add(1,3)


문제 331. 아래의 리스트의 결과가 아래와 같이 수행될 수 있게 하시오 !
	  (lambda를 이용해서 구현하시오 !)

	a = [1, 2, 3, 4, 5]
	mul = lambda x : x*x
	print([mul(i) for i in a])
    

문제 332. 위의 결과를 map 을 이용하지 말고 출력하시오 !

	a = [1,2,3,4,5]
	multi = lambda x : x * x
	for i in range(len(a)):
	    a[i] = multi(a[i])
	print( a )












■135. 인자를 바꾸어 함수를 반복 호출하여 결과값 얻기 (map)

	map( A함수명, A함수에 제공할 매개변수값들 )
		매개변수 값들을 바꿔가면서 함수를 반복 실행 하고자 할 때 사용한다.


	예제 : 
		multi = lambda x : x*x
		a = [1, 2, 3, 4, 5]
		b = map(multi, a)	# map (숫자or문자함수, 함수인자) 숫자 or문자함수를 리스트원소마다
					# 적용해 b 메모리 주소에 저장(출력할때는 list화해서 출력)
		print(list(b))
		[1, 4, 9, 16, 25]




문제 333. 몬테카를로 알고리즘을 이용해서 원주율 구하는 함수를 반복수행해서 점의 갯수가 많을 수록 원주율이 
	  3.14에 가까워짐을 테스트 하시오 !

	def find_cycle(total):
	    import random
	    cnt = 0
	    for i in range(total):
	        x = random.uniform(0, 1)
	        y = random.uniform(0, 1)
	        if x*x + y*y <= 1:
	            cnt += 1
	    return(cnt/total)*4
	
	print(find_cycle(1000))
	# 결과 : 3.036



#문제 334. 몬테카를로 알고리즘을 이용해서 원주율 구하는 함수를 반복 수행해서 점의 갯수가 많을 수록 원주율 
	    3.14에 가까워짐을 테스트하시오 !

	a = [1000, 10000, 100000, 1000000, 10000000]
	
	def find_cycle(total):
	    import random
	    cnt = 0
	    for i in range(total):
	        x = random.uniform(0, 1)
	        y = random.uniform(0, 1)
	        if x*x + y*y <= 1:
	            cnt += 1
	    return(cnt/total)*4
	
	fin = map(find_cycle, a)
	print( list(fin))
	
	# 결과 : [3.156, 3.178, 3.1394, 3.14404, 3.1423888]














■ 136. 텍스트 파일을 읽고 출력하기 (read)

	예제 :
		f = open('c:\\stockcode_part.txt','r')
		data = f.read()
		print(data)
		f.close()		# 파일을 닫는다.
			# 파일모습 그대로 한번에 출력












■ 137. 텍스트 파일을 한줄 씩 읽고 출력하기 (readlines)

	예제 : 
		f = open('c:\\stockcode_part.txt','r')
		data = f.readlines()
		print(data)
		f.close()
			#리스트형식으로 라인마다 나눠서 출력



문제 335. 위의 예제를 이용해서 기업명을 물어보게 하고 기업명을 입력하면 주식코드가 출력되게 하시오!

	ask = input('기업명을 입력하세요 ! ')
	
	f = open('c:\\stockcode_part.txt','r')
	data = f.readlines()
	for i in data:
	    if ask in i:
	        print (i[:6])
	        break
	f.close()

	# 기업명을 입력하세요 ! 대동공업
	# 000490





문제 336. 카카오 경력파트 알고리즘 문제를 문제에서 제시한 url알고리즘에 충실해서 문제를 푸시오 !


artist = ['beatles','beatles','beatles','beatles','소녀시대','소녀시대','소녀시대','버즈','버즈','버즈','버즈']
music = ['Yesterday','Let it be','something','please please me','Gee','소원을 말해봐','다만세','가시','겁쟁이','사랑하지 않은 것처럼','활주']

from collections import defaultdict
from random import shuffle, uniform
artist_music = defaultdict(list)

for i in artist:
    artist_music[i]
for art_ind, art in enumerate(artist):
    artist_music[art].append(music[art_ind])
    shuffle(artist_music[art])
play_list = []

for i in artist_music.keys():
    percent = []
    for j in range(len(artist_music[i])):
        if j == 0:
            song_loc = uniform(0,1/len(artist_music[i]))
            p = song_loc + uniform(-0.15,0.15)
            q = artist_music[i][j]
            r = i
            percent.append([p,q,r])
        else:
            p = song_loc + (1/len(artist_music[i]))*j
            q = artist_music[i][j]
            r = i
            percent.append([p,q,r])
    play_list += percent
play_list.sort()

for i in range(1,len(play_list)-1):
    if play_list[i - 1][2] == play_list[i][2]:
        if i == len(play_list) - 1:
            dummy = play_list[i - 1]
            play_list[i - 1] = play_list[i - 2]
            play_list[i - 2] = dummy
        else:
            dummy = play_list[i]
            play_list[i] = play_list[i + 1]
            play_list[i + 1] = dummy
            
for i in play_list:
    print(i[1], end = '   ')






































