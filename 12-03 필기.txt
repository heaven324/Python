■ 이번주 일정

	64번 ~ 177제

	1. 하루에 10개 ~ 12개 파이썬 기본 문법

	월	화	수	목	금
	월	화	수	목	금
					금
					↓
					12/21에 파이썬 시험






■ 65. Pandas를 이용해서 조건절 사용 데이터 검색 방법

	오라클		vs		판다스

1. between ... and		1000 <= emp['sal'] and emp['age'] <= 3000
				emp['sal'].between(1000,3000)
2. in				isin

3. is null			isnull()

4. like				apply 함수, lambda 표현식





문제 215. 우리반(emp7.csv)에서 이름이 이소진 학생의 이름과 나이를 출력하시오 !

	import pandas as pd
	emp = pd.read_csv('c:\\emp7.csv')
	
	print (emp[['ename','age']][emp['ename'] == '이소진'])



문제 216. 나이가 25에서 28사이인 학생들의 이름과 나이를 출력하시오 !

	import pandas as pd
	emp = pd.read_csv('c:\\emp8.csv')
	print (emp[ ['ename','age'] ] [ emp['age'].between(25,28) ] )

	import pandas as pd
	emp = pd.read_csv('c:\\emp8.csv')
	print (emp[ ['ename','age'] ] [ (25 <= emp['age']) & (emp['age'] <= 28) ] )



문제 217. 나이가 25에서 28사이가 아닌 학생들의 이름과 나이를 출력하시오 !

	import pandas as pd
	emp = pd.read_csv('c:\\emp8.csv')
	print (emp[ ['ename','age'] ] [ ~emp['age'].between(25,28) ] )



문제 218. 7기 학생들 중에서 전공이 환경공학, 신학인 학생들의 이름과 전공을 출력하시오 !

	import pandas as pd
	emp = pd.read_csv('c:\\emp7.csv')
	print (emp[ ['ename','major'] ] [ emp['major'].isin( [ '환경공학','신학' ] ) ] )

		# 조건절에 괄호안에 리스트를 넣어야 함 !









■ 66. Pandas를 이용한 조인



문제 219. Pandas를 이용해서 이름과 부서위치를 출력하시오 !

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	dept = pd.read_csv('c:\\dept1.csv')
	
	result = pd.merge( emp, dept, on = 'deptno')	# 조인을 해서 출력한다 연결고리(deptno)
	
	print ( result[['ename','loc']])



문제 220. 부서위치가 DALLAS인 사원들의 이름과 부서위치를 출력하시오 !

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	dept = pd.read_csv('c:\\dept1.csv')
	
	result = pd.merge( emp, dept, on = 'deptno')
	
	print ( result[['ename','loc']][result['loc'] == 'DALLAS'])



문제 221. 이름과 부서위치를 출력하는데 아래의 SQL의 outer join을 구현하시오 ~

	SQL> select e.ename, d.loc
	       from emp e, dept d
	       where e.deptno = d.deptno (+);

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	dept = pd.read_csv('c:\\dept1.csv')
	
	result = pd.merge( emp, dept, on = 'deptno', how = 'right')
	
	print ( result[['ename','loc']])



문제 222. 아래의 full outer join을 pandas로 구현하시오 !

	SQL> select e.ename, d.loc
	       from emp e full outer join dept d
	       on ( e.deptno = d.deptno );

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	dept = pd.read_csv('c:\\dept1.csv')
	
	result = pd.merge( emp, dept, on = 'deptno', how = 'outer')
	
	print ( result[['ename','loc']])

		※ right, left, outer








■ 67. Pandas를 이용한 서브쿼리



문제 223. JONES보다 더 많은 월급을 받는 사원들의 이름과 월급을 출력하시오 !

	SQL> select ename, sal
	       from emp
	       where sal > (select sal 
			      from emp 
			      where ename = 'JONES');

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	jonessal = emp[['sal']][emp['ename'] == 'JONES'].values[0][0]
	print(jonessal)
	print (emp[['ename','sal']][emp['sal'] >= jonessal])

		※ values[0]으로 출력하면 리스트형식



문제 224. SCOTT의 직속상사의 이름을 출력하시오 !

	SQL> select ename
	       from emp
	       where empno = (select mgr 
				from emp 
				where ename = 'SCOTT');

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	
	scottmgr = emp[['mgr']][emp['ename'] == 'SCOTT'].values[0][0]
	print(scottmgr)
	print (emp[['ename']][emp['empno'] == scottmgr])



문제 225. 관리자인 사원들의 이름을 출력하시오 !

	SQL> select ename
	       from emp
	       where empno in (select mgr from emp);

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	print (emp[['ename']][emp['empno'].isin(emp['mgr'])])


문제 226. 관리자가 아닌 사원들의 이름을 출력하시오 !

	SQL> select ename
	       from emp
	       where empno in (select mgr from emp);

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	print (emp[['ename']][~emp['empno'].isin(emp['mgr'])])



문제 227. 최대월급을 받는 사원의 이름과 월급을 출력하시오 !

	SQL> select ename, sal
	       from emp
	       where sal = (select max(sal)
			      from emp);

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	max_sal = emp['sal'].max()
	print (emp[['ename','sal']][emp['sal'] == max_sal ])
	
		※ max_sal2 = max(emp['sal'])로 해도 됨







■ 68. 반올림 수 구하기 (round)

	예제 :
		print( round( 16.554, 0 ) )
		
		17.0

			 1  6 . 5 5 4
			-2 -1 0 1 2 3
		print( round( 16.554, 1 ) )
		17.6



문제 228. 이름, 월급 * 0.15 를 출력하시오 !(판다스를 이용해서 출력)

	import pandas as pd

	emp = pd.read_csv('c:\\emp.csv')
	emp['sal'] = emp['sal']*0.15

	print(emp[['ename','sal']])



문제 229. 위의 결과를 다시 출력하는데 월급을 출력할 때 소수점 첫째 자리에서 반올림 해서 출력하시오 !

	import pandas as pd
	emp = pd.read_csv('c:\\emp.csv')
	emp['sal'] = round( emp['sal']*0.15, 0)
	print(emp[['ename','sal']])

		※ 7    JAMES  142.50    -------->   7    JAMES  142.0	# 2가 좋아서 2가 나옴
		   8     WARD  187.50    -------->   8     WARD  188.0	# 8이 좋아서 8이 나옴
		   반올림이 안되었다! 왜???

		   "R과 파이썬은 짝수를 좋아한다."
			7.5 ----> 8
			2.5 ----> 2

		※ 설명 : 파이썬은 짝수를 좋아하기 때문에 142.5 ---> 142로 반올림 되어서 출력된다.
			  파이썬에서는 기본적으로 이것을 해결하는 함수가 없다.
			  0.5 일때는 짝수를 좋아하게끔 반올림 안되고 0.51일 때는 반올림 된다.




문제 230. 문제 229번을 제대로 반올림 되게 하시오 ! (오라클 처럼 반올림 되게 하시오 !

	import pandas as pd
	emp = pd.read_csv('c:\\emp.csv')
	emp['sal'] = round( emp['sal']*0.15+0.00001, 0)
	print(emp[['ename','sal']])











■ 69. 실수형 자료를 정수형 자료로 변환하기 (int)

   • 파이썬의 변환 함수 정리

				Data type		변환함수
	1. 정수형		  int			  int()
	2. 문자형		  str			  str()
	3. 실수형		  float			float()
	4. 리스트형		  list			 list()
	5. 튜플형		  tuple			tuple()




문제 231. 판다스를 이용하지 말고 이름과 연봉 (sal*12)을 출력하시오 !

	import csv
	
	file = open('c:\\emp2.csv','r')
	emp_csv = csv.reader(file)
	
	for emp_list in emp_csv:
	    print(emp_list[1], int(emp_list[5])*12)












■ 70. 정수형 자료를 실수형으로 변환하기 (float)


	예제 :
		a = float(10)
		print(a)		# 10.0 으로 출력됨










■ 71. 정수 리스트에서 소수만 걸러내기(filter)


	합성수		vs		소수
	  6				 7
	2 x 3				두개의 수로 못나눈다.
					(1과 자기 자신으로만 나눌 수 있는 수)



문제 232. 아래의 리스트에서 소수만 걸러내시오 !

	a = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
	결과 : 11, 13, 17, 19

	선혜코드 :
		for i in a:
		    num=0
		    for j in range(2,i):
		        if i%j==0:
		            num+=1
		    if num==0:
		        print(i)



문제 233. 선혜코드로 아래의 함수를 생성하시오 !

	def getPrime(x):
	    for i in x:
	        num=0
	        for j in range(2,i):
	            if i%j==0:
	                num+=1
	        if num==0:
	            print(i)



문제 234. getPrime함수와 filter함수를 이용해서 a리스트에서 소수를 걸러내시오!

	def getPrime(x):
	        num=0
	        for j in range(2,x):
	            if x%j==0:
	                num+=1
	        if num==0:
	            return x

	a = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
	
	result=filter(getPrime, a)
	print(list(result))

		※ filter가 돌려면 요소를 추출하는 함수가 값으로 입력되게 만들어야 한다.
		   filter자체에 for문이 있어서 리스트의 요소마다 추출하는 것 같음!



문제 235. 사원테이블에서 최대월급을 출력하시오 !

	1. Pandas 이용한 방법

		import pandas as pd

		emp = pd.read_csv('c:\\emp.csv')
		print( emp['sal'].max() )


	2. Pandas 이용하지 않은 방법
		import csv
		
		file = open('c:\\emp2.csv','r')
		emp_csv = csv.reader(file)
		a = []
		for i in emp_csv:
		    a.append(int(i[5]))
		print(max(a))










■ 73. 판다스와 오라클 그룹함수 비교



문제 236. 직업, 직업별 최대 월급을 출력하시오 !

	SQL> select job, max(sal)
	       from emp
	       group by job;

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	result = emp.groupby('job')['sal'].max()
	print(result)



문제 237. 부서번호, 직업, 부서번호별 직업별 토탈월급을 출력하시오 !

	SQL> select deptno, job, max(sal)
	       from emp
	       group by deptno, job;

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	result = emp.groupby(['deptno', 'job'])['sal'].max()
	print(result)

		deptno  job      
		10      CLERK        1300
		        MANAGER      2450
		        PRESIDENT    5000
		20      ANALYST      3000
		        CLERK        1100
		        MANAGER      2975
		30      CLERK         950
		        MANAGER      2850
		        SALESMAN     1600


문제 238. 직업, 직업별 토탈월급을 출력하는데 직업이 SALESMAN은 제외하고 출력하고
	  직업별 토탈월급이 6000 이상인 것만 출력하시오 !

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	emp['job'] = emp['job'][emp['job'] != 'SALESMAN' ]
	result = emp.groupby('job')['sal'].sum()
	result1 = result >= 6000
	print(result[result1 == True])









■ 74. pandas와 오라클 분석함수 비교

	"순위를 출력하는 분석함수를 판다스에서 구현"



문제 239. 이름, 월급, 순위를 출력하시오 !

	import pandas as pd
	
	emp = pd.read_csv('c:\\emp.csv')
	emp['rnk'] = emp['sal'].rank(ascending = False).apply(int)	#apply(함수) 함수 적용
	emp = emp.sort_values('rnk',ascending=True)
	print(emp[['ename','sal','rnk']])

	     ename   sal  rnk
	0     KING  5000    1
	9     FORD  3000    2
	11   SCOTT  3000    2
	3    JONES  2975    4
	1    BLAKE  2850    5
	2    CLARK  2450    6
	5    ALLEN  1600    7
	6   TURNER  1500    8
	13  MILLER  1300    9
	4   MARTIN  1250   10
	8     WARD  1250   10
	12   ADAMS  1100   12
	7    JAMES   950   13
	10   SMITH   800   14
	


문제 240. 직업, 직업별 토탈월급, 순위를 출력하시오 !
	  순위는 직업별 토탈월급이 높은 것에 대한 순위이다.

import pandas as pd

emp = pd.read_csv('c:\\emp.csv')
emp = emp.groupby('job')['sal'].sum().reset_index()		# reset_index : DataFrame으로 저장
emp['rnk'] = emp['sal'].rank(ascending = False).apply(int)
emp = emp.sort_values('rnk',ascending=True)
print(emp[['job','sal','rnk']])









■ 75. 문자열에서 특정 위치의 문자 얻기

문제 241. 아래의 txt1문자열에서 '가'를 출력하시오!

	txt1 = '이 또한 지나가리라.'

	print( txt1[-4] )












■ 76. 문자열에서 지정한 구간의 문자열 얻기


문제 242. 아래의 txt1 문자열에서 '가리라'를 출력하시오 !

	txt1 = '이 또한 지나가리라.'
	
	print( txt1[-4:])










■ 77. 문자열에서 홀수 번째 문자만 추출하기


문제 243. 아래의 txt2 문자열에서 홀수번째 문자만 추출하시오 !

	txt2 = 'aAbBcCdDeEfFgGhHiIjJkK'

	print( txt1[0::2])


문제 244. 아래의 txt2 문자열에서 짝수번째 문자만 추출하시오 !

	txt2 = 'aAbBcCdDeEfFgGhHiIjJkK'
	
	print( txt1[1::2])









■ 78. 문자열을 거꾸로 출력하기

	txt3 = 'abcdefg'
	print(txt3[::-1]









■ (알고리즘 문제 3번째) 버블 정렬을 파이썬으로 구현하시오 !


문제 245. 아래의 리스트를 버블 정렬하는 함수를 생성하시오!
	  (loop문으로 구현)

	a = [5, 4, 3, 2, 1, 8, 7, 10]
	print(bubble_sort(a))        

	def bubble_sort(data):
	    dummy = 0                       #자리를 바꾸기 위한 더미변수
	    for j in range(len(data)):
	        for i in range(len(data)-1):
	            if data[i] > data[i+1]:
	                dummy = data[i]
	                data[i] = data[i+1]
	                data[i+1] = dummy
	    return data











