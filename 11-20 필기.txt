문제 66. 이름의 첫번째 철자가 S로 시작하는 사원들의 이름을 출력하시오 !

	SQL> select ename
	       from emp
	       where ename like 'S%';


	- pandas 이용하지 않은 코드

	import csv
	
	file = open("c:\\emp_comm.csv",'r')
	emp_comm = csv.reader(file)
	for i in emp_comm:
	    if i[1][0] == 'S':
	        print(i[1], i[1][0])


	- pandas를 이용한 코드

	import pandas as pd

	emp = pd.read_csv("c:\\emp.csv")
	result = emp['ename'].apply(lambda x : x[0] == 'S')	# .apply(함수명 또는 lambda 표현식)
								  결과는 논리값( True or false)
	result2 = emp[['ename']] [result==True]
	print( result2 )


※ lambda 표현식 ?					# 한번 쓰고 말 함수를 람다로 만들면 편하다!
	여러줄의 코드를 딱 한줄로 만들어 주는 문법
	오라클로 설명하면 "이름 없는 함수"

	예 : 파이썬에서 함수를 생성하는 방법
	def hap(x,y):
	    return x + y
	print ( hap(10, 20))

	30


문제 67. 아래와 같이 함수를 실행하면 결과가 아래와 같이 출력되는 함수를 생성하시오 !

		print( gop(10,20) )

	def gop(x,y):
	    return x * y
	print ( gop(10, 20))
	
	200



문제 68. 위의 코드를 lambda표현식으로 나타내시오 !
			↓
		이름없는 함수 또는 여러줄의 코드를 
		딱 한줄로 표현하기 위한 문법

	print ( (lambda x, y : x * y) (10,20) )
	200


문제 69. 오라클의 nvl함수를 파이썬으로 구현하고 이름과 커미션을 출력하는데 커미션이 null인 사원들은 0으로
	 출력되게 하시오 !

	def nvl(x,y):
	    if x is '':
	        return y
	    return x
	
	import csv
	file = open("c:\\emp_comm.csv",'r')
	emp_csv = csv.reader(file)
	for emp_list in emp_csv:
	    print(emp_list[1], nvl(emp_list[6], 0) )
	
	KING 0
	BLAKE 0
	CLARK 0
	JONES 0
	MARTIN 1400
	ALLEN 300
	TURNER 0
	JAMES 0
	WARD 500
	FORD 0
	SMITH 0
	SCOTT 0
	ADAMS 0
	MILLER 0

문제 70. 위의 결과를 nvl함수를 만들지 말고 lambda 표현식으로 구현하시오 !

	import csv
	file = open("c:\\emp_comm.csv",'r')
	emp_csv = csv.reader(file)
	for emp_list in emp_csv:
	    print(emp_list[1],\
	          ( lambda x,y :y if(x is '') else x )\		# 한줄로 쓰는 if 문을 알아야 한다.
	          (emp_list[6],0) )

		※ 코드 설명 : if 문을 한줄로 표현하는 파이썬의 comprehension
			       y if (x is '') else x
			       x가 null일 때는 y를 출력하고 그렇지 않으면 x를 출력하라.	
	KING 0
	BLAKE 0
	CLARK 0
	JONES 0
	MARTIN 1400
	ALLEN 300
	TURNER 0
	JAMES 0
	WARD 500
	FORD 0
	SMITH 0
	SCOTT 0
	ADAMS 0
	MILLER 0



문제 71. 이름의 두번째 철자가 M인 사원들의 이름을 pandas로 구현하시오 !

	import pandas as pd

	emp = pd.read_csv("c:\\emp.csv")
	result = emp['ename'].apply(lambda x : x[1] == 'M')
	result2 = emp[['ename']] [result==True]
	print( result2 )

	    ename
	10  SMITH



문제 72. 두개의 숫자를 물어보게 하고 두개의 숫자 사이의 모든 숫자를 다 더한 겂이 출력되게 하시오 !

	첫번째 수를 입력하시오 !1
	
	두번째 수를 입력하시오 !10

	a = int( input('첫번째 수를 입력하시오 !'))
	b = int( input('두번째 수를 입력하시오 !'))
	c = 0
	for i in range(a,b+1):
	    c += i
	print(c,'입니다.')








■ 26. 시퀀스 자료형 이해하기

	문자열 'abcde'는 a, b, c, d, e 가 순서대로 나열되어 있는 시퀀스 자료형이다.

	예제 :  strdata = 'abcde'	# a b c d e
		print (strdata[0])	  0 1 2 3 4
					       -2-1 
		a

			listdata = [ 'a', 'b', 'c', 'd', 'e' ]
				      0    1    2    3    4
				     -5   -4   -3   -2   -1


문제 73. 이름의 끝 글자가 T로 끝나는 사원들의 이름을 출력하시오 !

	import csv

	file = open("c:\\emp_comm.csv",'r')
	emp_csv = csv.reader(file)

	for emp_list in emp_csv:
	    if emp_list[1][-1] == 'T':
	        print ( emp_list[1] )

	SCOTT








■ 27. 시퀀스 자료 인덱싱 이해하기

	예제 :
		strdata = 'Time is money!!'  	# 문자열 변수
		listdata = [1, 2, [4, 5, 6] ] 	# 리스트변수
						# 리스트 안에 리스트가 있는 경우


문제 74. 위의 예제에서 strdata문자열 변수에서 철자 i를 출력하시오 !

	print ( strdata[5] )
	i



문제 75. 아래의 listdata변수에서 숫자 2를 출력하시오 !

	listdata = [1, 2, [4, 5, 6] ]

	print ( listdata[1] )
	print ( listdata[2][1] )
	2


문제 76. 아래의 listdata변수에서 숫자 4를 출력하시오 !

	listdata = [1, 2, [4, 5, 6] ]

	print ( listdata[2][0] )
	4	






■ 28. 시퀀스 자료 슬라이싱 이해하기

	예제 :
		strdata = 'Time is money'

		print ( strdata[1:5])		# 형식식 [시작문자열번호 : 끝 문자열 번호 : 배수의숫자만]

		ime


문제 77. strdata에서 아래의 문자만 출력하시오 !

	strdata = 'Time is money'
	
	print ( strdata[0:7] )
	print ( strdata[ :7] )



문제 78. strdata 문자열 변수값에서 짝수번째 철자만 출력하시오 !

	strdata = 'Time is money'

	print ( strdata[::2])



문제 79. 이름을 출력하고 이름의 첫번째 철자부터 세번째 철자까지 아래와 같이 출력되게 하시오 !

	import csv

	file = open ( "c:\\emp_comm.csv", 'r' )
	emp_csv = csv.reader(file)
	
	for emp_list in emp_csv:
	    print( emp_list[1], emp_list[1][:3] )



문제 80. 위의 결과를 pandas를 이용해서 출력하시오 !

	import pandas as pd
	emp = pd.read_csv("c:\\emp.csv")
	result = emp['ename']
	
	print (result.apply(lambda x : x[:3] ) )

	0     KIN
	1     BLA
	2     CLA
	3     JON
	4     MAR
	5     ALL
	6     TUR
	7     JAM
	8     WAR
	9     FOR
	10    SMI
	11    SCO
	12    ADA
	13    MIL







■ 29. 시퀀스 자료 연결하기 ( + )

	예제 : 
		strdata1 = 'i love '
	strdata2 = 'Python'

	print( strdata1 + strdata2)

	i love Python



문제 81. 이름을 출력하는데 전부 소문자로 출력하시오 !

	import csv
	file = open ( "c:\\emp_comm.csv", 'r' )
	emp_csv = csv.reader(file)
	
	for emp_list in emp_csv:
	    print( emp_list[1].lower() )
	
	king
	blake
	clark
	jones
	martin
	allen
	turner
	james
	ward
	ford
	smith
	scott
	adams
	miller



문제 82. 이름을 출력하는데 이름을 첫철자는 대문자로 출력하고 나머지는 소문자로 출력하는 아래의 SQL을 구현하시오 !
	 (lower(), upper() 함수를 이용하세요 )
	SQL> select initcap(ename)
	       from emp;

	import csv
	file = open ( "c:\\emp_comm.csv", 'r' )
	emp_csv = csv.reader(file)
	
	for emp_list in emp_csv:
	    print( emp_list[1][0].upper() +\
	           emp_list[1][1:].lower() )

	King
	Blake
	Clark
	Jones
	Martin
	Allen
	Turner
	James
	Ward
	Ford
	Smith
	Scott
	Adams
	Miller









■ 30. 시퀀스 자료 반복 이해하기 (*)

	예제 :
		a = int ( input( '숫자를 입력하세요 !' ) )
		for i in range( 1, a + 1 ):
		    print( '★' * i )
		
		숫자를 입력하세요 !5
		★
		★★
		★★★
		★★★★
		★★★★★



■ 31. 시퀀스 자료 크기 이해하기 (len)

strdata1 = 'I love Python'
print( len(strdata1) )
13



문제 83. 아래의 SQL을 파이썬으로 구현하시오 !

	SQL> select ename, length(ename)
	       from emp;
	
	import csv
	file = open ( "c:\\emp_comm.csv", 'r' )
	emp_csv = csv.reader(file)
	
	for emp_list in emp_csv:
	    print( emp_list[1], len(emp_list[1]) ) 
	
	KING 4
	BLAKE 5
	CLARK 5
	JONES 5
	MARTIN 6
	ALLEN 5
	TURNER 6
	JAMES 5
	WARD 4
	FORD 4
	SMITH 5
	SCOTT 5
	ADAMS 5
	MILLER 6











■ 32. 문자열의 멤버체크 이해하기 (in)

	"자료에 어떤 값이 있는지 없는지 확인하는 방법"

	예제 : 
		listdata = [1, 2, 3, 4]
		result1 = 5 in listdata
		result2 = 4 in listdata
		
		print( result1 )
		print( result2 )
		False
		True


문제 84. 겨울왕국 대본에는 elsa가 몇번 나오는지 확인하기 위해서 겨울왕국 스크립트 한라인 한라인을 각각 list변수에
	 담으시오 !

		winter.txt (텍스트) -----------------> 리스트 변수
			↓				    ↓

		      script 			['repaired', 'with', 'a', 'ice.\n']

답 :


문제 85. 아래의 리스트에서 단어를 하나씩 뽑아내서 출력하시오 !

	a = ['repaired', 'with', 'a', 'ice.\n']

	a = ['repaired', 'with', 'a', 'ice.\n']
	for i in a:
	    print(i)
	
	repaired
	with
	a
	ice.



문제 86. 겨울왕국 스크립트를 한 단어씩 출력하시오 !

				for loop			for loop
	winter.txt (텍스트) -----------------> 리스트 변수 ------------------> 한 단어
		↓				    ↓
	      script 			['repaired', 'with', 'a', 'ice.\n']

	file = open( "c:\\winter.txt",'r')
	for winter_list in file:
	    a = winter_list.split(' ')
	    for i in a:
	        print(i)


문제 87. 위의 단어들이 소문자로 출력되게 하시오 !

	file = open( "c:\\winter.txt",'r')
	for winter_list in file:
	    a = winter_list.split(' ')
	    for i in a:
	        print(i.lower())



문제 88. 아래의 list 에서 단어 aaa 가 몇개 있는지count 하시오 . 

	word = ['bbb', 'ccc', 'aaa', 'ddd', 'aaa']	
	print(word.count('aaa'))



문제 89. 겨울왕국 대본에는 elsa라는 단어가 몇번나오는가? anna라는 단어는 몇번 나오는가?

	anna = 0
	elsa = 0
	file = open( "c:\\winter.txt",'r')
	for winter_list in file:
	    a = winter_list.split(' ')
	    for i in a:
	        j = i.lower()
	        anna += j.count('anna')
	        elsa += j.count('elsa')
	print(anna, elsa)









■ 33. 문자열 이해하기

	▷ 문자열을 나타내는 방법 3가지

	1. ' 문자열 ' 		----> 싱글
	2. " 문자열 " 		----> 더블
	3. """ 문자열 """ 	----> 더블 3개

예제 :
	data1 = 'i am python programer'
	data2 = 'you are a programer'
	data3 = """ i love
	            i love
	            i love """
	            
	data4 = "my son's names is john"	# 문자열에 싱글을 나타내고 싶으면
	data5 = 'name of my son is "john"'	# 문자열에 더블을 나타내고 싶으면



문제 90. 문자열 안에 싱글과 더블 쿼테이션 마크를 다 넣고 싶을때는 어떻게 해야 되는가?

	data6 = """ my son's names is "john" """
	
	print(data6)



문제 91. 아래의 data1 ~ data 6 변수에 있는 문자열 값을 한번에 출력하시오 !

	data1 = 'i am python programer'
	data2 = 'you are a programer'
	data3 = """ i love
	            i love
	            i love """            
	data4 = "my son's names is john"
	data5 = 'name of my son is "john"'
	data6 = """ my son's names is "john" """
	
	for i in range(1,6):
	    dt = "data"+str( i )
	    print( locals()[dt] )	#지역변수 data들에 담긴 값들을 출력하겠다.
			※ 설명 : locals()  : 지역변수의 이름과 값을 확인하는 함수
				  globals() : 전역변수의 이름과 값을 확인하는 함수
	
	i am python programer
	you are a programer
	 i love
	            i love
	            i love 
	my son's names is john
	name of my son is "john"




















